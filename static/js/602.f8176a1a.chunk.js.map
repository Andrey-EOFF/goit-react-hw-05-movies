{"version":3,"file":"static/js/602.f8176a1a.chunk.js","mappings":"iOA+DA,UA3DyB,WAAO,IAAD,IACrBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAW3D,IATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACKC,EAAAA,EAAAA,IAAkBb,GADvB,OACXc,EADW,OAEjBV,EAAgBU,GAFC,2CAAH,qDAKhBF,GACD,GAAE,CAACZ,KAECG,EACH,OAAO,yBAAK,eAGd,IAAQY,EAAuDZ,EAAvDY,MAAOC,EAAgDb,EAAhDa,aAAcC,EAAkCd,EAAlCc,YAAaC,EAAqBf,EAArBe,SAAUC,EAAWhB,EAAXgB,OAC9CC,EAAwC,GAA5BjB,EAAakB,aAC/B,OACE,4BACE,SAAC,KAAD,CAAMC,GAAIf,EAAoBgB,QAA9B,SAAuC,aACvC,0BACGR,EAAM,KAAC,4BAAM,IAAEC,EAAa,WAE/B,4BACE,0BACE,gBACEQ,IAAG,yCAAoCP,GACvCQ,IAAKV,OAGT,4BACE,yBAAG,eAAaK,EAAU,QAC1B,yBAAG,aAAWF,MACd,yBAAG,WAASC,EAAOO,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAIrD,4BACE,wBAAI,gBACJ,2BACE,yBACE,SAAC,KAAD,CAAMP,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,EAAAQ,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,WAKT,C","sources":["pages/MovieDetailsPage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/MovieAPI';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const details = await fetchMovieDetails(movieId);\n      setMovieDetails(details);\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const { title, release_date, poster_path, overview, genres } = movieDetails;\n  const userScore = movieDetails.vote_average * 10;\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      <h1>\n        {title} <span>({release_date})</span>\n      </h1>\n      <div>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n            alt={title}\n          />\n        </div>\n        <div>\n          <p>User Score: {userScore}%</p>\n          <p>Overview: {overview}</p>\n          <p>Genres: {genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </div>\n\n      <div>\n        <h2>Aditionali</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovie","fetchMovieDetails","details","title","release_date","poster_path","overview","genres","userScore","vote_average","to","current","src","alt","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}