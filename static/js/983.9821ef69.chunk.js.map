{"version":3,"file":"static/js/983.9821ef69.chunk.js","mappings":"wNAiDA,UA9CiB,WACf,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAET,mCAFS,SAGDC,MAAM,2DAAD,OADb,qCAFS,cAGlBC,EAHkB,gBAMLA,EAASC,OANJ,OAMlBC,EANkB,OAOxBR,EAAUQ,EAAKC,SAPS,kDASxBC,QAAQC,MAAM,yBAAd,MATwB,0DAAH,qDAazBP,GACD,KAGC,4BACE,wBAAI,oBACJ,yBACGL,EAAOa,KAAI,SAAAC,GAAK,OACf,UAAC,KAAD,CAEEC,MAAO,CAAEC,KAAMd,GACfe,GAAE,kBAAaH,EAAMI,IAHvB,WAKE,gBACEC,IAAG,yCAAoCL,EAAMM,aAC7CC,IAAKP,EAAMQ,SAEb,wBAAKR,EAAMQ,UARNR,EAAMI,GAFE,QAgBxB,C,sBC7CD,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOpB,GAEP,YADAc,EAAOd,EAET,CAEImB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["pages/HomePage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMoviesTrending = async () => {\n      try {\n        const apiKey = 'af8f22ea7957eefc6025d5ff3672559f';\n        const response = await fetch(\n          `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n        );\n        const data = await response.json();\n        setMovies(data.results);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n\n    fetchMoviesTrending();\n  });\n\n  return (\n    <div>\n      <h1>Popular Movies</h1>\n      <div>\n        {movies.map(movie => (\n          <Link\n            key={movie.id}\n            state={{ from: location }}\n            to={`/movies/${movie.id}`}\n          >\n            <img\n              src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <h3>{movie.title}</h3>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n\n\nexport default HomePage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","movies","setMovies","location","useLocation","useEffect","fetchMoviesTrending","fetch","response","json","data","results","console","error","map","movie","state","from","to","id","src","poster_path","alt","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}