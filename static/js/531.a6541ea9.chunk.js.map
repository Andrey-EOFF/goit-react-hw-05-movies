{"version":3,"file":"static/js/531.a6541ea9.chunk.js","mappings":"sSAEMA,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAQD,EAAAA,GAAAA,GAAH,gDAILE,EAAeF,EAAAA,GAAAA,IAAH,+HASZG,EAAaH,EAAAA,GAAAA,IAAH,0DAKVI,EAAYJ,EAAAA,GAAAA,IAAH,oCAITK,EAAYL,EAAAA,GAAAA,EAAH,gDAITM,EAAWN,EAAAA,GAAAA,EAAH,gDAIRO,EAASP,EAAAA,GAAAA,EAAH,gDAINQ,EAAiBR,EAAAA,GAAAA,IAAH,6CAIdS,EAAkBT,EAAAA,GAAAA,GAAH,0EAMfU,EAAiBV,EAAAA,GAAAA,GAAH,gD,SC2BpB,EA3DyB,WAAO,IAAD,IACrBW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAW3D,IATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACKC,EAAAA,EAAAA,IAAkBb,GADvB,OACXc,EADW,OAEjBV,EAAgBU,GAFC,2CAAH,qDAKhBF,GACD,GAAE,CAACZ,KAECG,EACH,OAAO,yBAAK,eAGd,IAAQY,EAAuDZ,EAAvDY,MAAOC,EAAgDb,EAAhDa,aAAcC,EAAkCd,EAAlCc,YAAaC,EAAqBf,EAArBe,SAAUC,EAAWhB,EAAXgB,OAC9CC,EAAwC,GAA5BjB,EAAakB,aAC/B,OACE,UAACjC,EAAD,YACE,SAAC,KAAD,CAAMkC,GAAIf,EAAoBgB,QAA9B,SAAuC,aACvC,UAACjC,EAAD,WACGyB,EAAM,KAAC,4BAAM,IAAEC,EAAa,WAE/B,UAACzB,EAAD,YACE,0BACE,SAACC,EAAD,CACEgC,IAAG,yCAAoCP,GACvCQ,IAAKV,OAGT,UAACtB,EAAD,YACE,UAACC,EAAD,WAAW,eAAa0B,EAAU,QAClC,UAACzB,EAAD,WAAU,aAAWuB,MACrB,UAACtB,EAAD,WAAQ,WAASuB,EAAOO,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAI1D,UAAChC,EAAD,YACE,wBAAI,gBACJ,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAAC,KAAD,CAAMuB,GAAG,OAAT,SAAgB,YAElB,SAACvB,EAAD,WACE,SAAC,KAAD,CAAMuB,GAAG,UAAT,SAAmB,kBAGvB,SAAC,EAAAQ,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,WAKT,C","sources":["pages/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 10px;\n`;\n\nconst MovieDetails = styled.div`\n  display: flex;\n  align-items: flex-start;\n\n  & > div:first-child {\n    margin-right: 20px;\n  }\n`;\n\nconst MovieImage = styled.img`\n  width: 300px;\n  height: auto;\n`;\n\nconst MovieInfo = styled.div`\n  flex: 1;\n`;\n\nconst UserScore = styled.p`\n  margin-bottom: 10px;\n`;\n\nconst Overview = styled.p`\n  margin-bottom: 10px;\n`;\n\nconst Genres = styled.p`\n  margin-bottom: 10px;\n`;\n\nconst AdditionalInfo = styled.div`\n  margin-top: 20px;\n`;\n\nconst AdditionalLinks = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst AdditionalLink = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport {\n  Container,\n  Title,\n  MovieDetails,\n  MovieImage,\n  MovieInfo,\n  UserScore,\n  Overview,\n  Genres,\n  AdditionalInfo,\n  AdditionalLinks,\n  AdditionalLink,\n};\n","import React, { useEffect, useState, useRef, Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/MovieAPI';\n\nimport {\n  Container,\n  Title,\n  MovieDetails,\n  MovieImage,\n  MovieInfo,\n  UserScore,\n  Overview,\n  Genres,\n  AdditionalInfo,\n  AdditionalLinks,\n  AdditionalLink,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const details = await fetchMovieDetails(movieId);\n      setMovieDetails(details);\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const { title, release_date, poster_path, overview, genres } = movieDetails;\n  const userScore = movieDetails.vote_average * 10;\n  return (\n    <Container>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      <Title>\n        {title} <span>({release_date})</span>\n      </Title>\n      <MovieDetails>\n        <div>\n          <MovieImage\n            src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n            alt={title}\n          />\n        </div>\n        <MovieInfo>\n          <UserScore>User Score: {userScore}%</UserScore>\n          <Overview>Overview: {overview}</Overview>\n          <Genres>Genres: {genres.map(genre => genre.name).join(', ')}</Genres>\n        </MovieInfo>\n      </MovieDetails>\n\n      <AdditionalInfo>\n        <h2>Aditionali</h2>\n        <AdditionalLinks>\n          <AdditionalLink>\n            <Link to=\"cast\">Cast</Link>\n          </AdditionalLink>\n          <AdditionalLink>\n            <Link to=\"reviews\">Reviews</Link>\n          </AdditionalLink>\n        </AdditionalLinks>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </AdditionalInfo>\n    </Container>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["Container","styled","Title","MovieDetails","MovieImage","MovieInfo","UserScore","Overview","Genres","AdditionalInfo","AdditionalLinks","AdditionalLink","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovie","fetchMovieDetails","details","title","release_date","poster_path","overview","genres","userScore","vote_average","to","current","src","alt","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}